# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1
jobs:
  build:
    docker:
      - image: circleci/openjdk:8u171-jdk
    working_directory: ~/repo
    environment:
      MAVEN_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - maven-repo-{{ .Branch }}-{{ checksum "fidelius-service/pom.xml" }}
            - maven-repo-{{ .Branch }}-
            - maven-repo
      - run:
          name: Run Tests and Build Backend Services
          command: |
            pushd fidelius-service
            mvn clean package
      - save_cache:
          paths:
            - ~/.m2
          key: maven-repo-{{ .Branch }}-{{ checksum "fidelius-service/pom.xml" }}
      - run:
          name: Save Tests
          command: |
            mkdir -p ~/junit
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
      - store_test_results:
          path: ~/junit
      - save_cache:
          key: fidelius-service-{{ .Branch }}-{{ epoch }}
          paths:
              - fidelius-service/target/fidelius-service-1.0.jar
  build_ui:
    docker:
      - image: circleci/node:10-stretch-browsers
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
              - v1-dependencies-{{ checksum "fidelius-ui/package.json" }}
              - v1-dependencies-
      - run:
          name: Install Dependencies
          command: |
            pushd fidelius-ui
            npm install --verbose
      - save_cache:
          key: v1-dependencies-{{ checksum "fidelius-ui/package.json" }}
          paths:
              - ~/fidelius-ui/node_modules
      - run:
          name: Run Tests
          command: |
            pushd fidelius-ui
            npm run test
      - run:
          name: Save-Tests
          command: |
            mkdir -p ~/junit
            find . -type f -regex ".*/test/junit/.*xml" -exec cp {} ~/junit/ \;
      - run:
          name: Build Application
          command: |
            pushd fidelius-ui
            npm run build --aot --build-optimizer --prod
            tar -czvf dist.tar.gz dist
      - save_cache:
          key: fidelius-ui-{{ .Branch }}-{{ epoch }}
          paths:
              - fidelius-ui/dist.tar.gz
      - store_test_results:
          path: ~/junit
  build_base_docker:
    working_directory: /repo
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Base Container
          command: |
            cd containers/base
            docker build -t fidelius/base ./
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/base.tar fidelius/base
      - save_cache:
          key: fid_cntnr_base_v1-{{ .Branch }}-{{ checksum "/caches/base.tar" }}
          paths:
            - /caches/base.tar
  build_java_docker:
    working_directory: /repo
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - fid_cntnr_base_v1-{{ .Branch }}
          paths:
            - /caches/base.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/base.tar | true
      - run:
          name: Build Java Container
          command: |
            cd containers/java
            docker build -t fidelius/java ./
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/java.tar fidelius/java
      - save_cache:
          key: fid_cntnr_java_v1-{{ .Branch }}-{{ checksum "/caches/java.tar" }}
          paths:
            - /caches/java.tar
  build_nginx_docker:
    working_directory: /repo
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - fid_cntnr_base_v1-{{ .Branch }}
          paths:
            - /caches/base.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/base.tar | true
      - run:
          name: Build Nginx Container
          command: |
            cd containers/nginx
            docker build -t fidelius/nginx ./
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/nginx.tar fidelius/nginx
      - save_cache:
          key: fid_cntnr_nginx_v1-{{ .Branch }}-{{ checksum "/caches/nginx.tar" }}
          paths:
            - /caches/nginx.tar
  build_and_push_ui:
    working_directory: ~/repo
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - fid_cntnr_nginx_v1-{{ .Branch }}
          paths:
            - /caches/nginx.tar
      - restore_cache:
          keys:
            - fidelius-ui-{{ .Branch }}
      - run:
          name: Load Docker image + stage UI code
          command: |
            set +o pipefail
            docker load -i /caches/nginx.tar | true
            mv /home/circleci/repo/fidelius-ui/dist.tar.gz ~/repo/fidelius-ui
            cd fidelius-ui
            tar -xzvf dist.tar.gz
      - run:
          name: Build Fidelius UI Container
          command: |
            cd fidelius-ui
            docker build -t fidelius/ui ./
      - run:
          name: Push Fidelius UI Container to docker repo
          command: |
            source .circleci/push.sh fidelius/ui fidelius-ui
  build_sdk:
    working_directory: ~/repo
    docker:
      - image: circleci/openjdk:8u171-jdk
    environment:
      MAVEN_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - maven-repo-{{ .Branch }}-{{ checksum "fidelius-sdk/pom.xml" }}
            - maven-repo-{{ .Branch }}-
            - maven-repo
      - run:
          name: Build Fidelius SDK
          command: |
            pushd fidelius-sdk
            export AWS_REGION=us-east-1
            mvn clean package
            unset AWS_REGION
      - save_cache:
          paths:
            - ~/.m2
          key: fidelius-sdk-{{ checksum "fidelius-sdk/pom.xml" }}
      - store_test_results:
          path: fidelius-sdk/target/surefire-reports
      - store_artifacts:
          path: fidelius-sdk/target/fidelius-sdk-2.0.0-SNAPSHOT.jar
  deploy_sdk:
    working_directory: ~/repo
    docker:
      - image: circleci/openjdk:8u171-jdk
    environment:
      MAVEN_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
         keys:
           - fidelius-sdk-{{ checksum "fidelius-sdk/pom.xml" }}
         paths:
           - fidelius-sdk/target/fidelius-sdk-2.0.0-SNAPSHOT.jar
      - restore_cache:
         keys:
           - fidelius-service-{{ .Branch }}
      - save_cache:
          paths:
            - ~/.m2
          key: fidelius-sdk-{{ checksum "fidelius-sdk/pom.xml" }}
      - store_test_results:
          path: fidelius-sdk/target/surefire-reports
      - store_artifacts:
          path: fidelius-sdk/target/fidelius-sdk-2.0.0-SNAPSHOT.jar
      - run:
          name: Import GPG key
          command: |
            GPG_TTY=$(tty)
            export GPG_TTY
            echo -----BEGIN PGP PRIVATE KEY BLOCK----- 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 aPqGUTjEaASXX+iOdOpJNNQj0QEP0N+z =kRf/ -----END PGP PRIVATE KEY BLOCK-----
            gpg --batch --import "-----BEGIN PGP PRIVATE KEY BLOCK----- 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 aPqGUTjEaASXX+iOdOpJNNQj0QEP0N+z =kRf/ -----END PGP PRIVATE KEY BLOCK-----"
      - run:
          name: Deploy Fidelius SDK
          command: |
            pushd fidelius-sdk
            mvn deploy -DskipTests -Prelease --settings ../.circleci/settings.xml
  build_and_push_service:
    working_directory: ~/repo
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - fid_cntnr_java_v1-{{ .Branch }}
          paths:
            - /caches/java.tar
      - restore_cache:
          keys:
            - fidelius-service-{{ .Branch }}
      - run:
          name: Load Docker image
          command: |
            set +o pipefail
            docker load -i /caches/java.tar | true
            mv /home/circleci/repo/fidelius-service/target ~/repo/fidelius-service/
      - run:
          name: Build Fidelius Service Container
          command: |
            cd fidelius-service
            docker build --build-arg jar_file=fidelius-service-1.0.jar -t fidelius/service ./
            docker images
      - run:
          name: Push Fielius Service Container to docker repo
          command: |
            source .circleci/push.sh fidelius/service fidelius-service
workflows:
  version: 2.1
  ci-push:
    jobs:
      - build
      - build_ui
      - build_base_docker
      - build_sdk
      - confirm_deploy:
          type: approval
          requires:
            - build_sdk
      - deploy_sdk:
          requires:
            - build_sdk
            - confirm_deploy
      - build_java_docker:
          requires:
            - build_base_docker
      - build_nginx_docker:
          requires:
            - build_base_docker
      - build_and_push_ui:
          requires:
            - build_ui
            - build_base_docker
            - build_nginx_docker
      - build_and_push_service:
          requires:
            - build
            - build_base_docker
            - build_java_docker
  tag-and-release:
    jobs:
      - build:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - build_ui:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - deploy_sdk:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
          requires:
            - build_sdk
      - build_sdk:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - build_base_docker:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - build_java_docker:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
          requires:
            - build_base_docker
      - build_nginx_docker:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
          requires:
            - build_base_docker
      - build_and_push_ui:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
          requires:
            - build_ui
            - build_base_docker
            - build_nginx_docker
      - build_and_push_service:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
          requires:
            - build
            - build_base_docker
            - build_java_docker
